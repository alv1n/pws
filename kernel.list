
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	eaffffff 	b	8004 <kernel>

Disassembly of section .text:

00008004 <kernel>:
    8004:	e92d4800 	push	{fp, lr}
    8008:	e28db004 	add	fp, sp, #4
    800c:	eb000166 	bl	85ac <main>
    8010:	e24bd004 	sub	sp, fp, #4
    8014:	e8bd4800 	pop	{fp, lr}
    8018:	e12fff1e 	bx	lr

0000801c <MailboxWrite>:
    801c:	e310000f 	tst	r0, #15
    8020:	11a0f00e 	movne	pc, lr
    8024:	e351000f 	cmp	r1, #15
    8028:	81a0f00e 	movhi	pc, lr
    802c:	e59f2044 	ldr	r2, [pc, #68]	; 8078 <rightmail$+0x24>

00008030 <wait1$>:
    8030:	e5923018 	ldr	r3, [r2, #24]
    8034:	e3130102 	tst	r3, #-2147483648	; 0x80000000
    8038:	1afffffc 	bne	8030 <wait1$>
    803c:	e0800001 	add	r0, r0, r1
    8040:	e5820020 	str	r0, [r2, #32]
    8044:	e1a0f00e 	mov	pc, lr

00008048 <MailboxRead>:
    8048:	e350000f 	cmp	r0, #15
    804c:	81a0f00e 	movhi	pc, lr
    8050:	e59f1020 	ldr	r1, [pc, #32]	; 8078 <rightmail$+0x24>

00008054 <rightmail$>:
    8054:	e5912018 	ldr	r2, [r1, #24]
    8058:	e3120101 	tst	r2, #1073741824	; 0x40000000
    805c:	1afffffc 	bne	8054 <rightmail$>
    8060:	e5912000 	ldr	r2, [r1]
    8064:	e202300f 	and	r3, r2, #15
    8068:	e1330000 	teq	r3, r0
    806c:	1afffff8 	bne	8054 <rightmail$>
    8070:	e3c2000f 	bic	r0, r2, #15
    8074:	e1a0f00e 	mov	pc, lr
    8078:	2000b880 	.word	0x2000b880

0000807c <InitialiseFrameBuffer>:
    807c:	e3500a01 	cmp	r0, #4096	; 0x1000
    8080:	93510a01 	cmpls	r1, #4096	; 0x1000
    8084:	93520020 	cmpls	r2, #32
    8088:	83a00000 	movhi	r0, #0
    808c:	81a0f00e 	movhi	pc, lr
    8090:	e92d4010 	push	{r4, lr}
    8094:	e59f403c 	ldr	r4, [pc, #60]	; 80d8 <InitialiseFrameBuffer+0x5c>
    8098:	e5840000 	str	r0, [r4]
    809c:	e5841004 	str	r1, [r4, #4]
    80a0:	e5840008 	str	r0, [r4, #8]
    80a4:	e584100c 	str	r1, [r4, #12]
    80a8:	e5842014 	str	r2, [r4, #20]
    80ac:	e1a00004 	mov	r0, r4
    80b0:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
    80b4:	e3a01001 	mov	r1, #1
    80b8:	ebffffd7 	bl	801c <MailboxWrite>
    80bc:	e3a00001 	mov	r0, #1
    80c0:	ebffffe0 	bl	8048 <MailboxRead>
    80c4:	e3300000 	teq	r0, #0
    80c8:	13a00000 	movne	r0, #0
    80cc:	18bd8010 	popne	{r4, pc}
    80d0:	e1a00004 	mov	r0, r4
    80d4:	e8bd8010 	pop	{r4, pc}
    80d8:	00008720 	.word	0x00008720

000080dc <CharCount>:
    80dc:	e1a01000 	mov	r1, r0
    80e0:	e3a00000 	mov	r0, #0

000080e4 <CharCountLoop$>:
    80e4:	e7d12000 	ldrb	r2, [r1, r0]
    80e8:	e3520000 	cmp	r2, #0
    80ec:	01a0f00e 	moveq	pc, lr
    80f0:	e2800001 	add	r0, r0, #1
    80f4:	eafffffa 	b	80e4 <CharCountLoop$>

000080f8 <SignedString>:
    80f8:	e92d4010 	push	{r4, lr}
    80fc:	e3520000 	cmp	r2, #0
    8100:	d3e00001 	mvnle	r0, #1
    8104:	d8bd9ff0 	pople	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
    8108:	e3a04000 	mov	r4, #0
    810c:	e3500000 	cmp	r0, #0
    8110:	aa000005 	bge	812c <ContinueSignedString$>
    8114:	e3a0302d 	mov	r3, #45	; 0x2d
    8118:	e3310000 	teq	r1, #0
    811c:	15c13000 	strbne	r3, [r1]
    8120:	e2811001 	add	r1, r1, #1
    8124:	e2600000 	rsb	r0, r0, #0
    8128:	e2844001 	add	r4, r4, #1

0000812c <ContinueSignedString$>:
    812c:	eb000001 	bl	8138 <UnsignedString>
    8130:	e0800004 	add	r0, r0, r4
    8134:	d8bd8010 	pople	{r4, pc}

00008138 <UnsignedString>:
    8138:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    813c:	e1a04000 	mov	r4, r0
    8140:	e1a05001 	mov	r5, r1
    8144:	e1a06002 	mov	r6, r2
    8148:	e3a07000 	mov	r7, #0

0000814c <ConversionLoop$>:
    814c:	e1a01006 	mov	r1, r6
    8150:	eb000147 	bl	8674 <DivideU32>
    8154:	e351000a 	cmp	r1, #10
    8158:	32811030 	addcc	r1, r1, #48	; 0x30
    815c:	22811057 	addcs	r1, r1, #87	; 0x57
    8160:	e3350000 	teq	r5, #0
    8164:	17c51007 	strbne	r1, [r5, r7]
    8168:	e2877001 	add	r7, r7, #1
    816c:	e3500000 	cmp	r0, #0
    8170:	8afffff5 	bhi	814c <ConversionLoop$>
    8174:	e3350000 	teq	r5, #0
    8178:	11a00005 	movne	r0, r5
    817c:	11a01007 	movne	r1, r7
    8180:	1b000001 	blne	818c <ReverseString>
    8184:	e1a00007 	mov	r0, r7
    8188:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

0000818c <ReverseString>:
    818c:	e0801001 	add	r1, r0, r1
    8190:	e2411001 	sub	r1, r1, #1

00008194 <ReversionLoop$>:
    8194:	e1510000 	cmp	r1, r0
    8198:	91a0f00e 	movls	pc, lr
    819c:	e5d02000 	ldrb	r2, [r0]
    81a0:	e5d13000 	ldrb	r3, [r1]
    81a4:	e5c03000 	strb	r3, [r0]
    81a8:	e5c12000 	strb	r2, [r1]
    81ac:	e2800001 	add	r0, r0, #1
    81b0:	e2411001 	sub	r1, r1, #1
    81b4:	eafffff6 	b	8194 <ReversionLoop$>

000081b8 <FormatString>:
    81b8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    81bc:	e1a04000 	mov	r4, r0
    81c0:	e1a05001 	mov	r5, r1
    81c4:	e1a06002 	mov	r6, r2
    81c8:	e1a07003 	mov	r7, r3
    81cc:	e28d801c 	add	r8, sp, #28
    81d0:	e3a09000 	mov	r9, #0

000081d4 <formatLoop$>:
    81d4:	e2555001 	subs	r5, r5, #1
    81d8:	b1a00009 	movlt	r0, r9
    81dc:	b8bd83f0 	poplt	{r4, r5, r6, r7, r8, r9, pc}
    81e0:	e5d40000 	ldrb	r0, [r4]
    81e4:	e2844001 	add	r4, r4, #1
    81e8:	e3300025 	teq	r0, #37	; 0x25
    81ec:	0a000004 	beq	8204 <formatArg$>

000081f0 <formatChar$>:
    81f0:	e3360000 	teq	r6, #0
    81f4:	15c60000 	strbne	r0, [r6]
    81f8:	12866001 	addne	r6, r6, #1
    81fc:	e2899001 	add	r9, r9, #1
    8200:	eafffff3 	b	81d4 <formatLoop$>

00008204 <formatArg$>:
    8204:	e2555001 	subs	r5, r5, #1
    8208:	b1a00009 	movlt	r0, r9
    820c:	b8bd83f0 	poplt	{r4, r5, r6, r7, r8, r9, pc}
    8210:	e5d40000 	ldrb	r0, [r4]
    8214:	e2844001 	add	r4, r4, #1
    8218:	e3300025 	teq	r0, #37	; 0x25
    821c:	0afffff3 	beq	81f0 <formatChar$>
    8220:	e3300063 	teq	r0, #99	; 0x63
    8224:	01a00007 	moveq	r0, r7
    8228:	05987000 	ldreq	r7, [r8]
    822c:	02888004 	addeq	r8, r8, #4
    8230:	0affffee 	beq	81f0 <formatChar$>
    8234:	e3300073 	teq	r0, #115	; 0x73
    8238:	0a000007 	beq	825c <formatString$>
    823c:	e3300064 	teq	r0, #100	; 0x64
    8240:	0a000010 	beq	8288 <formatSigned$>
    8244:	e3300075 	teq	r0, #117	; 0x75
    8248:	13300078 	teqne	r0, #120	; 0x78
    824c:	13300062 	teqne	r0, #98	; 0x62
    8250:	1330006f 	teqne	r0, #111	; 0x6f
    8254:	0a000015 	beq	82b0 <formatUnsigned$>
    8258:	eaffffdd 	b	81d4 <formatLoop$>

0000825c <formatString$>:
    825c:	e5d70000 	ldrb	r0, [r7]
    8260:	e3300000 	teq	r0, #0
    8264:	05987000 	ldreq	r7, [r8]
    8268:	02888004 	addeq	r8, r8, #4
    826c:	0affffd8 	beq	81d4 <formatLoop$>
    8270:	e2899001 	add	r9, r9, #1
    8274:	e3360000 	teq	r6, #0
    8278:	15c60000 	strbne	r0, [r6]
    827c:	12866001 	addne	r6, r6, #1
    8280:	e2877001 	add	r7, r7, #1
    8284:	eafffff4 	b	825c <formatString$>

00008288 <formatSigned$>:
    8288:	e1a00007 	mov	r0, r7
    828c:	e5987000 	ldr	r7, [r8]
    8290:	e2888004 	add	r8, r8, #4
    8294:	e1a01006 	mov	r1, r6
    8298:	e3a0200a 	mov	r2, #10
    829c:	ebffff95 	bl	80f8 <SignedString>
    82a0:	e3360000 	teq	r6, #0
    82a4:	10866000 	addne	r6, r6, r0
    82a8:	e0899000 	add	r9, r9, r0
    82ac:	eaffffc8 	b	81d4 <formatLoop$>

000082b0 <formatUnsigned$>:
    82b0:	e3300075 	teq	r0, #117	; 0x75
    82b4:	03a0200a 	moveq	r2, #10
    82b8:	e3300078 	teq	r0, #120	; 0x78
    82bc:	03a02010 	moveq	r2, #16
    82c0:	e3300062 	teq	r0, #98	; 0x62
    82c4:	03a02002 	moveq	r2, #2
    82c8:	e330006f 	teq	r0, #111	; 0x6f
    82cc:	03a02008 	moveq	r2, #8
    82d0:	e1a00007 	mov	r0, r7
    82d4:	e5987000 	ldr	r7, [r8]
    82d8:	e2888004 	add	r8, r8, #4
    82dc:	e1a01006 	mov	r1, r6
    82e0:	ebffff94 	bl	8138 <UnsignedString>
    82e4:	e3360000 	teq	r6, #0
    82e8:	10866000 	addne	r6, r6, r0
    82ec:	e0899000 	add	r9, r9, r0
    82f0:	eaffffb7 	b	81d4 <formatLoop$>

000082f4 <timerWait>:
    82f4:	e1a03000 	mov	r3, r0
    82f8:	e59f2014 	ldr	r2, [pc, #20]	; 8314 <timerWaitLoop$+0x10>
    82fc:	e1c200d0 	ldrd	r0, [r2]
    8300:	e0833000 	add	r3, r3, r0

00008304 <timerWaitLoop$>:
    8304:	e1c200d0 	ldrd	r0, [r2]
    8308:	e1530000 	cmp	r3, r0
    830c:	8afffffc 	bhi	8304 <timerWaitLoop$>
    8310:	e1a0f00e 	mov	pc, lr
    8314:	20003004 	.word	0x20003004

00008318 <SetForeColour>:
    8318:	e3500801 	cmp	r0, #65536	; 0x10000
    831c:	21a0f00e 	movcs	pc, lr
    8320:	e59f11d4 	ldr	r1, [pc, #468]	; 84fc <stringLoopTab$+0x14>
    8324:	e1c100b0 	strh	r0, [r1]
    8328:	e1a0f00e 	mov	pc, lr

0000832c <SetGraphicsAddress>:
    832c:	e59f11cc 	ldr	r1, [pc, #460]	; 8500 <stringLoopTab$+0x18>
    8330:	e5810000 	str	r0, [r1]
    8334:	e1a0f00e 	mov	pc, lr

00008338 <DrawPixel>:
    8338:	e59f21c0 	ldr	r2, [pc, #448]	; 8500 <stringLoopTab$+0x18>
    833c:	e5922000 	ldr	r2, [r2]
    8340:	e5923004 	ldr	r3, [r2, #4]
    8344:	e1510003 	cmp	r1, r3
    8348:	21a0f00e 	movcs	pc, lr
    834c:	e5923000 	ldr	r3, [r2]
    8350:	e1500003 	cmp	r0, r3
    8354:	21a0f00e 	movcs	pc, lr
    8358:	e5922020 	ldr	r2, [r2, #32]
    835c:	e0200391 	mla	r0, r1, r3, r0
    8360:	e0822080 	add	r2, r2, r0, lsl #1
    8364:	e59f3190 	ldr	r3, [pc, #400]	; 84fc <stringLoopTab$+0x14>
    8368:	e1d330b0 	ldrh	r3, [r3]
    836c:	e1c230b0 	strh	r3, [r2]
    8370:	e1a0f00e 	mov	pc, lr

00008374 <DrawLine>:
    8374:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    8378:	e1a09000 	mov	r9, r0
    837c:	e1a0a002 	mov	sl, r2
    8380:	e1a0b001 	mov	fp, r1
    8384:	e1a0c003 	mov	ip, r3
    8388:	e159000a 	cmp	r9, sl
    838c:	c049400a 	subgt	r4, r9, sl
    8390:	c3e06000 	mvngt	r6, #0
    8394:	d04a4009 	suble	r4, sl, r9
    8398:	d3a06001 	movle	r6, #1
    839c:	e15b000c 	cmp	fp, ip
    83a0:	c04c500b 	subgt	r5, ip, fp
    83a4:	c3e07000 	mvngt	r7, #0
    83a8:	d04b500c 	suble	r5, fp, ip
    83ac:	d3a07001 	movle	r7, #1
    83b0:	e0848005 	add	r8, r4, r5
    83b4:	e08aa006 	add	sl, sl, r6
    83b8:	e08cc007 	add	ip, ip, r7

000083bc <pixelLoop$>:
    83bc:	e139000a 	teq	r9, sl
    83c0:	113b000c 	teqne	fp, ip
    83c4:	08bd9ff0 	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
    83c8:	e1a00009 	mov	r0, r9
    83cc:	e1a0100b 	mov	r1, fp
    83d0:	ebffffd8 	bl	8338 <DrawPixel>
    83d4:	e1550088 	cmp	r5, r8, lsl #1
    83d8:	d0888005 	addle	r8, r8, r5
    83dc:	d0899006 	addle	r9, r9, r6
    83e0:	e1540088 	cmp	r4, r8, lsl #1
    83e4:	a0888004 	addge	r8, r8, r4
    83e8:	a08bb007 	addge	fp, fp, r7
    83ec:	eafffff2 	b	83bc <pixelLoop$>

000083f0 <DrawByte>:
    83f0:	e20000ff 	and	r0, r0, #255	; 0xff
    83f4:	e3510b01 	cmp	r1, #1024	; 0x400
    83f8:	33520c03 	cmpcc	r2, #768	; 0x300
    83fc:	21a0f00e 	movcs	pc, lr
    8400:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    8404:	e1a04000 	mov	r4, r0
    8408:	e1a05001 	mov	r5, r1
    840c:	e1a06002 	mov	r6, r2
    8410:	e3a07000 	mov	r7, #0

00008414 <DrawByteLoop$>:
    8414:	e3140001 	tst	r4, #1
    8418:	10850007 	addne	r0, r5, r7
    841c:	11a01006 	movne	r1, r6
    8420:	1bffffc4 	blne	8338 <DrawPixel>
    8424:	e1a040a4 	lsr	r4, r4, #1
    8428:	e2877001 	add	r7, r7, #1
    842c:	e3370008 	teq	r7, #8
    8430:	1afffff7 	bne	8414 <DrawByteLoop$>
    8434:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

00008438 <DrawCharacter>:
    8438:	e350007f 	cmp	r0, #127	; 0x7f
    843c:	81a0f00e 	movhi	pc, lr
    8440:	e3510b01 	cmp	r1, #1024	; 0x400
    8444:	33520c03 	cmpcc	r2, #768	; 0x300
    8448:	21a0f00e 	movcs	pc, lr
    844c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
    8450:	e1a04001 	mov	r4, r1
    8454:	e1a05002 	mov	r5, r2
    8458:	e59f60a4 	ldr	r6, [pc, #164]	; 8504 <stringLoopTab$+0x1c>
    845c:	e0866200 	add	r6, r6, r0, lsl #4

00008460 <DrawCharacterLewp$>:
    8460:	e5d60000 	ldrb	r0, [r6]
    8464:	e1a01004 	mov	r1, r4
    8468:	e1a02005 	mov	r2, r5
    846c:	ebffffdf 	bl	83f0 <DrawByte>
    8470:	e2855001 	add	r5, r5, #1
    8474:	e2866001 	add	r6, r6, #1
    8478:	e316000f 	tst	r6, #15
    847c:	1afffff7 	bne	8460 <DrawCharacterLewp$>
    8480:	e3a00008 	mov	r0, #8
    8484:	e3a01010 	mov	r1, #16
    8488:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}

0000848c <DrawString>:
    848c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
    8490:	e1a04000 	mov	r4, r0
    8494:	e1a07001 	mov	r7, r1
    8498:	e1a05002 	mov	r5, r2
    849c:	e1a06003 	mov	r6, r3
    84a0:	e1a08005 	mov	r8, r5

000084a4 <DrawStringLoop$>:
    84a4:	e2577001 	subs	r7, r7, #1
    84a8:	b8bd83f0 	poplt	{r4, r5, r6, r7, r8, r9, pc}
    84ac:	e5d49000 	ldrb	r9, [r4]
    84b0:	e1a00009 	mov	r0, r9
    84b4:	e1a01005 	mov	r1, r5
    84b8:	e1a02006 	mov	r2, r6
    84bc:	ebffffdd 	bl	8438 <DrawCharacter>
    84c0:	e2844001 	add	r4, r4, #1
    84c4:	e339000a 	teq	r9, #10
    84c8:	00866001 	addeq	r6, r6, r1
    84cc:	01a05008 	moveq	r5, r8
    84d0:	0afffff3 	beq	84a4 <DrawStringLoop$>
    84d4:	e3390009 	teq	r9, #9
    84d8:	10855000 	addne	r5, r5, r0
    84dc:	1afffff0 	bne	84a4 <DrawStringLoop$>
    84e0:	e0800100 	add	r0, r0, r0, lsl #2
    84e4:	e1a01008 	mov	r1, r8

000084e8 <stringLoopTab$>:
    84e8:	e0811000 	add	r1, r1, r0
    84ec:	e1550001 	cmp	r5, r1
    84f0:	aafffffc 	bge	84e8 <stringLoopTab$>
    84f4:	e1a05001 	mov	r5, r1
    84f8:	eaffffe9 	b	84a4 <DrawStringLoop$>
    84fc:	00008750 	.word	0x00008750
    8500:	00008754 	.word	0x00008754
    8504:	00008760 	.word	0x00008760

00008508 <SetGpioFunction>:
    8508:	e3500035 	cmp	r0, #53	; 0x35
    850c:	93510007 	cmpls	r1, #7
    8510:	81a0f00e 	movhi	pc, lr
    8514:	e1a02000 	mov	r2, r0
    8518:	e59f0088 	ldr	r0, [pc, #136]	; 85a8 <SetGpio+0x50>

0000851c <functionLoop$>:
    851c:	e3520009 	cmp	r2, #9
    8520:	8242200a 	subhi	r2, r2, #10
    8524:	82800004 	addhi	r0, r0, #4
    8528:	8afffffb 	bhi	851c <functionLoop$>
    852c:	e0822082 	add	r2, r2, r2, lsl #1
    8530:	e1a01211 	lsl	r1, r1, r2
    8534:	e3a03007 	mov	r3, #7
    8538:	e1a03213 	lsl	r3, r3, r2
    853c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    8540:	e5904000 	ldr	r4, [r0]
    8544:	e1c44003 	bic	r4, r4, r3
    8548:	e1811004 	orr	r1, r1, r4
    854c:	e5801000 	str	r1, [r0]
    8550:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
    8554:	e1a0f00e 	mov	pc, lr

00008558 <SetGpio>:
    8558:	e3500035 	cmp	r0, #53	; 0x35
    855c:	81a0f00e 	movhi	pc, lr
    8560:	e1a02000 	mov	r2, r0
    8564:	e59f003c 	ldr	r0, [pc, #60]	; 85a8 <SetGpio+0x50>
    8568:	e1a032a2 	lsr	r3, r2, #5
    856c:	e1a03103 	lsl	r3, r3, #2
    8570:	e0800003 	add	r0, r0, r3
    8574:	e202201f 	and	r2, r2, #31
    8578:	e3a03001 	mov	r3, #1
    857c:	e1a03213 	lsl	r3, r3, r2
    8580:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    8584:	e3310000 	teq	r1, #0
    8588:	05904028 	ldreq	r4, [r0, #40]	; 0x28
    858c:	1590401c 	ldrne	r4, [r0, #28]
    8590:	e1833004 	orr	r3, r3, r4
    8594:	e3310000 	teq	r1, #0
    8598:	05803028 	streq	r3, [r0, #40]	; 0x28
    859c:	1580301c 	strne	r3, [r0, #28]
    85a0:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
    85a4:	e1a0f00e 	mov	pc, lr
    85a8:	20200000 	.word	0x20200000

000085ac <main>:
    85ac:	e3a0d902 	mov	sp, #32768	; 0x8000
    85b0:	e3a00b01 	mov	r0, #1024	; 0x400
    85b4:	e3a01c03 	mov	r1, #768	; 0x300
    85b8:	e3a02010 	mov	r2, #16
    85bc:	ebfffeae 	bl	807c <InitialiseFrameBuffer>
    85c0:	e3300000 	teq	r0, #0
    85c4:	1a000006 	bne	85e4 <noError$>
    85c8:	e3a0002f 	mov	r0, #47	; 0x2f
    85cc:	e3a01001 	mov	r1, #1
    85d0:	ebffffcc 	bl	8508 <SetGpioFunction>
    85d4:	e3a0002f 	mov	r0, #47	; 0x2f
    85d8:	e3a01000 	mov	r1, #0
    85dc:	ebffffdd 	bl	8558 <SetGpio>

000085e0 <error$>:
    85e0:	eafffffe 	b	85e0 <error$>

000085e4 <noError$>:
    85e4:	ebffff50 	bl	832c <SetGraphicsAddress>
    85e8:	e3a04000 	mov	r4, #0

000085ec <loop$>:
    85ec:	e59f0060 	ldr	r0, [pc, #96]	; 8654 <loop$+0x68>
    85f0:	e3a01015 	mov	r1, #21
    85f4:	e59f205c 	ldr	r2, [pc, #92]	; 8658 <loop$+0x6c>
    85f8:	e1a03224 	lsr	r3, r4, #4
    85fc:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    8600:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    8604:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    8608:	e52d3004 	push	{r3}		; (str r3, [sp, #-4]!)
    860c:	ebfffee9 	bl	81b8 <FormatString>
    8610:	e28dd010 	add	sp, sp, #16
    8614:	e1a01000 	mov	r1, r0
    8618:	e59f0038 	ldr	r0, [pc, #56]	; 8658 <loop$+0x6c>
    861c:	e3a02000 	mov	r2, #0
    8620:	e1a03004 	mov	r3, r4
    8624:	e3530e2f 	cmp	r3, #752	; 0x2f0
    8628:	82433c03 	subhi	r3, r3, #768	; 0x300
    862c:	82822c01 	addhi	r2, r2, #256	; 0x100
    8630:	e3530e2f 	cmp	r3, #752	; 0x2f0
    8634:	82433c03 	subhi	r3, r3, #768	; 0x300
    8638:	82822c01 	addhi	r2, r2, #256	; 0x100
    863c:	e3530e2f 	cmp	r3, #752	; 0x2f0
    8640:	82433c03 	subhi	r3, r3, #768	; 0x300
    8644:	82822c01 	addhi	r2, r2, #256	; 0x100
    8648:	ebffff8f 	bl	848c <DrawString>
    864c:	e2844010 	add	r4, r4, #16
    8650:	eaffffe5 	b	85ec <loop$>
    8654:	00008f60 	.word	0x00008f60
    8658:	00008f75 	.word	0x00008f75

0000865c <Random>:
    865c:	e3a01cef 	mov	r1, #61184	; 0xef00
    8660:	e0010190 	mul	r1, r0, r1
    8664:	e0010190 	mul	r1, r0, r1
    8668:	e0811000 	add	r1, r1, r0
    866c:	e2810049 	add	r0, r1, #73	; 0x49
    8670:	e1a0f00e 	mov	pc, lr

00008674 <DivideU32>:
    8674:	e16f2f11 	clz	r2, r1
    8678:	e16f3f10 	clz	r3, r0
    867c:	e0522003 	subs	r2, r2, r3
    8680:	e1a03211 	lsl	r3, r1, r2
    8684:	e1a01000 	mov	r1, r0
    8688:	e3a00000 	mov	r0, #0
    868c:	ba000009 	blt	86b8 <divideU32Return$>

00008690 <divideU32Loop$>:
    8690:	e1510003 	cmp	r1, r3
    8694:	ba000003 	blt	86a8 <divideU32LoopContinue$>
    8698:	e2800001 	add	r0, r0, #1
    869c:	e0511003 	subs	r1, r1, r3
    86a0:	01a00210 	lsleq	r0, r0, r2
    86a4:	0a000003 	beq	86b8 <divideU32Return$>

000086a8 <divideU32LoopContinue$>:
    86a8:	e2522001 	subs	r2, r2, #1
    86ac:	a1a030a3 	lsrge	r3, r3, #1
    86b0:	a1a00080 	lslge	r0, r0, #1
    86b4:	aafffff5 	bge	8690 <divideU32Loop$>

000086b8 <divideU32Return$>:
    86b8:	e1a0f00e 	mov	pc, lr

000086bc <FindTag>:
    86bc:	e2400001 	sub	r0, r0, #1
    86c0:	e3500008 	cmp	r0, #8
    86c4:	83a00000 	movhi	r0, #0
    86c8:	81a0f00e 	movhi	pc, lr
    86cc:	e59f1040 	ldr	r1, [pc, #64]	; 8714 <tagLoop$+0x28>

000086d0 <tagReturn$>:
    86d0:	e0812100 	add	r2, r1, r0, lsl #2
    86d4:	e5922000 	ldr	r2, [r2]
    86d8:	e3320000 	teq	r2, #0
    86dc:	11a00002 	movne	r0, r2
    86e0:	11a0f00e 	movne	pc, lr
    86e4:	e3a02c01 	mov	r2, #256	; 0x100
    86e8:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)

000086ec <tagLoop$>:
    86ec:	e1d230b4 	ldrh	r3, [r2, #4]
    86f0:	e2533001 	subs	r3, r3, #1
    86f4:	b49d4004 	poplt	{r4}		; (ldrlt r4, [sp], #4)
    86f8:	bafffff4 	blt	86d0 <tagReturn$>
    86fc:	e0813103 	add	r3, r1, r3, lsl #2
    8700:	e5934000 	ldr	r4, [r3]
    8704:	e3340000 	teq	r4, #0
    8708:	05832000 	streq	r2, [r3]
    870c:	e5923000 	ldr	r3, [r2]
    8710:	e0822103 	add	r2, r2, r3, lsl #2
    8714:	00008f75 	.word	0x00008f75
